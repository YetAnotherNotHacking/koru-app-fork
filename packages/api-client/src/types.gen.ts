// This file is auto-generated by @hey-api/openapi-ts

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

export type Item = {
  id: number;
  name: string;
  description?: string | null;
  price: number;
  category: string;
};

export type ItemCreate = {
  name: string;
  description?: string | null;
  price: number;
  category: string;
};

export type User = {
  id: number;
  name: string;
  email: string;
  age?: number | null;
};

export type UserCreate = {
  name: string;
  email: string;
  age?: number | null;
};

export type UserUpdate = {
  name?: string | null;
  email?: string | null;
  age?: number | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type GetAllUsersData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/users/";
};

export type GetAllUsersResponses = {
  /**
   * Successful Response
   */
  200: Array<User>;
};

export type GetAllUsersResponse =
  GetAllUsersResponses[keyof GetAllUsersResponses];

export type CreateUserData = {
  body: UserCreate;
  path?: never;
  query?: never;
  url: "/users/";
};

export type CreateUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateUserError = CreateUserErrors[keyof CreateUserErrors];

export type CreateUserResponses = {
  /**
   * Successful Response
   */
  200: User;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type DeleteUserData = {
  body?: never;
  path: {
    user_id: number;
  };
  query?: never;
  url: "/users/{user_id}";
};

export type DeleteUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeleteUserError = DeleteUserErrors[keyof DeleteUserErrors];

export type DeleteUserResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type GetUserData = {
  body?: never;
  path: {
    user_id: number;
  };
  query?: never;
  url: "/users/{user_id}";
};

export type GetUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetUserError = GetUserErrors[keyof GetUserErrors];

export type GetUserResponses = {
  /**
   * Successful Response
   */
  200: User;
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];

export type UpdateUserData = {
  body: UserUpdate;
  path: {
    user_id: number;
  };
  query?: never;
  url: "/users/{user_id}";
};

export type UpdateUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateUserError = UpdateUserErrors[keyof UpdateUserErrors];

export type UpdateUserResponses = {
  /**
   * Successful Response
   */
  200: User;
};

export type UpdateUserResponse = UpdateUserResponses[keyof UpdateUserResponses];

export type GetItemsData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Filter by category
     */
    category?: string | null;
    /**
     * Minimum price filter
     */
    min_price?: number | null;
    /**
     * Maximum price filter
     */
    max_price?: number | null;
  };
  url: "/items/";
};

export type GetItemsErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetItemsError = GetItemsErrors[keyof GetItemsErrors];

export type GetItemsResponses = {
  /**
   * Successful Response
   */
  200: Array<Item>;
};

export type GetItemsResponse = GetItemsResponses[keyof GetItemsResponses];

export type CreateItemData = {
  body: ItemCreate;
  path?: never;
  query?: never;
  url: "/items/";
};

export type CreateItemErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateItemError = CreateItemErrors[keyof CreateItemErrors];

export type CreateItemResponses = {
  /**
   * Successful Response
   */
  200: Item;
};

export type CreateItemResponse = CreateItemResponses[keyof CreateItemResponses];

export type GetItemData = {
  body?: never;
  path: {
    item_id: number;
  };
  query?: never;
  url: "/items/{item_id}";
};

export type GetItemErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetItemError = GetItemErrors[keyof GetItemErrors];

export type GetItemResponses = {
  /**
   * Successful Response
   */
  200: Item;
};

export type GetItemResponse = GetItemResponses[keyof GetItemResponses];

export type GetCategoriesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/items/categories/list";
};

export type GetCategoriesResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type SearchItemsData = {
  body?: never;
  path: {
    search_term: string;
  };
  query?: never;
  url: "/items/search/{search_term}";
};

export type SearchItemsErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type SearchItemsError = SearchItemsErrors[keyof SearchItemsErrors];

export type SearchItemsResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type RootData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/";
};

export type RootResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type HealthCheckData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/health";
};

export type HealthCheckResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
